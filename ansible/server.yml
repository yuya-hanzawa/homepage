- hosts: host
  user: root
  tasks:
  - name: install git
    yum:
      name: git

  - name: create group
    group:
      name: webpage

  - name: create user
    user:
      name: '{{ user_name }}'
      password: "{{ user_pass | password_hash('sha512') }}"
      append: yes
      groups: wheel, webpage

  - name: mkdir git-repository
    file:
      path: '{{ item }}'
      state: directory
      group: webpage
      owner: yuya.hanzawa
      recurse: yes
    with_items:
      - /usr/share/nginx/git
      - /usr/share/nginx/git/profile.git

  - name: git --bare init --shared
    command:
      cmd: 'git --bare init --shared'
      chdir: /usr/share/nginx/git/profile.git

  - name: git clone
    command:
      cmd: 'git clone /usr/share/nginx/git/profile.git'
      chdir: /usr/share/nginx/html
    failed_when: no

  - name: modify nginx default.conf
    lineinfile:
      dest: /etc/nginx/conf.d/default.conf
      state: present
      backrefs: yes
      firstmatch: yes
      regexp: '^.*root.*/usr/share/nginx/html.*'
      line: '        root   /usr/share/nginx/html/profile;'

  - name: create git-hooks file
    copy:
      dest: /usr/share/nginx/git/profile.git/hooks/post-receive
      content: |
          cd /usr/share/nginx/html/profile
          git --git-dir=.git pull 
    
  - name: configure git-hooks directory owner and permission
    file:
      path: /usr/share/nginx/git/profile.git/hooks/post-receive
      mode: '755' 

  - name: configure nginx directory owner and permission
    file:
      path: /usr/share/nginx
      group: webpage
      owner: yuya.hanzawa
      mode: '775' 
      recurse: yes

  - name: modify sshd_config
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '{{ item.regexp }}'
      line: '{{ item.line }}'
    with_items:
      - regexp: '^#Port.*'
        line: 'Port {{ port }}'
      - regexp: '^#PermitRootLogin.*'
        line: 'PermitRootLogin no'
      - regexp: '^#PermitEmptyPasswords.*'
        line: 'PermitEmptyPasswords no'
  
  - name: restart sshd
    service:
      name: sshd
      state: restarted

  - name: started firewall
    systemd:
      name: firewalld
      state: started
      enabled: yes

  - name: firewalld enable ssh port
    firewalld:
      port: '{{ port }}/tcp'
      permanent: yes
      state: enabled
      immediate: true

  - name: firewalld disabled ssh
    firewalld:
      service: ssh
      permanent: yes
      state: disabled
      immediate: true
  
  - name: firewalld enable http, https
    firewalld:
      service: "{{ item }}"
      permanent: yes
      state: enabled
      immediate: true
    with_items:
      - http
      - https
